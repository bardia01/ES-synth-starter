for(int i=0; i<8;i++){
    if((g_keys_pressed_p1 & (1<<i)) != 0){ 
      if(knob2.knobrotation > 4){
        phaseAcc[i] += stepSizes[i] << (knob2.knobrotation - 4);
      }
      else{
        phaseAcc[i] += stepSizes[i] >> (4 - knob2.knobrotation);
      }
      Vout[i] = (phaseAcc[i] >> 24); 
      Vout[i] = Vout[i] >> (8 - knob3.knobrotation);
      cVout += Vout[i];
    }
  }

  for(int i=0; i<4;i++){
    if((g_keys_pressed_p2 & (1<<i)) != 0){ 
      if(knob2.knobrotation > 4){
        phaseAcc[i+8] += stepSizes[i+8] << (knob2.knobrotation - 4);
      }
      else{
        phaseAcc[i+8] += stepSizes[i+8] >> (4 - knob2.knobrotation);
      }
      Vout[i+8] = (phaseAcc[i+8] >> 24); 
      Vout[i+8] = Vout[i+8] >> (8 - knob3.knobrotation);
      cVout += Vout[i+8];
    }
  }